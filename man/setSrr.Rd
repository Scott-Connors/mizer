% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MizerParams-class.R
\docType{methods}
\name{setSrr}
\alias{setSrr}
\alias{setSrr,MizerParams,function-method}
\title{Method for setting stock recruitment relationship function}
\usage{
setSrr(params, srr)

\S4method{setSrr}{MizerParams,`function`}(params, srr)
}
\arguments{
\item{params}{An object of class \code{MizerParams}.}

\item{ssr}{A function to calculate the actual rate of egg production \eqn{R_i}}
}
\value{
A \code{MizerParams} object
}
\description{
The stock recruitment relationship function takes the total production
rate of eggs \eqn{R_{p.i}} and returns a modified production rate of eggs
\eqn{R_i}, as explained in section 3.6 in the mizer vignette.
}
\details{
The function \code{srr} should have at least the two arguments
\describe{
  \item{rdi}{The total production rate of eggs \eqn{R_{p.i}}}
  \item{...}{To allow the function to be called with a
             variable number of arguments}
}
The function can have the following optional arguments:
\describe{
  \item{species_params}{A dataframe with species parameters}
  \item{n}{A matrix (species x size) of fish abundances}
  \item{n_pp}{A vector of plankton abundances}
  \item{t_step}{An integer giving the time step if this is called inside a simulation}
}
If you need the function to depend on species-specific parameters, you could
include them in the species parameter dataframe when setting up the model.

The standard example of a stock recruitment relationship is the 
Beverton-Holt type implemented by the function
\preformatted{
  function(rdi, species_params, ...){
      return(species_params$r_max * rdi / (species_params$r_max+rdi))
  }
}
}
\examples{
\dontrun{
p <- set_trait_model()
# Setting trivial linear stock recruitment will lead to extinction
p <- setSrr(p, function(rdi, ...) {rdi})
sim <- project(p)
plotBiomass(sim )
}
}
